# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Worker"

on:
  workflow_call:
    inputs:
      jdk:
        required: false
        type: string
        default: '17'
      script:
        required: true
        type: string
        description: "Script to execute"
      key:
        required: false
        type: string
        description: "Key for the matrix"
      artifact_prefix:
        required: false
        type: string
        description: "Prefix for the artifact name"
      artifacts_to_download:
        required: false
        type: string
        description: "Artifacts to download. For example: 'unit-test-reports-*'"

env:
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 5

jobs:
  execute:
    name: "Execute (${{ inputs.key }})"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 500

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ inputs.jdk }}

      - name: Download required artifacts
        if: ${{ inputs.artifacts_to_download != '' }}
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ inputs.artifacts_to_download }}
          merge-multiple: true

      - name: Calculate hash for artifact name
        run: |
          ./.github/scripts/make-hash-for-artifact-name.sh "${{ inputs.key }}"

      - name: 'Execute script: (${{ inputs.key }})'
        run: |
          ./${{ inputs.script }} 

      - name: Check for dumps on failure
        if: ${{ failure() }}
        id: check_for_dumps
        run: |
          DUMP_FILES=$(find "${GITHUB_WORKSPACE}" \( -name '*.hprof' -or -name 'hs_err_pid*' -or -name 'replay_pid*' -or -regex '.*/core\.[0-9]*' \))
          
          if [[ -n "$DUMP_FILES" ]]; then
            tar -cvzf "${RUNNER_TEMP}/failure-dumps.tar.gz" ${DUMP_FILES}
            echo "found_dumps=true" >> "$GITHUB_ENV"
          fi

      - name: Upload Dumps to GitHub
        if: ${{ failure() && env.found_dumps == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: "$Failure-${{ env.HASH }}-${{ inputs.jdk }}"
          path: ${{ runner.temp }}/failure-dumps.tar.gz

      - name: Upload reports
        uses: actions/upload-artifact@v4
        if: ${{ inputs.artifact_prefix != '' }}
        with:
          name: "${{ inputs.artifact_prefix }}-${{ env.HASH }}"
          path: |
           ./**/TEST-*.xml
           ./**/target/jacoco*.exec
